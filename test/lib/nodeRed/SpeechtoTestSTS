[
	{	"id":"68a6b49.321714c",
		"type":"http in",
		"name":"",
		"url":"/stt",
		"method":"get",
		"swaggerDoc":"",
		"x":85,"y":92,"z":"246e966b.09b7c2",
		"wires":[["4c735530.7f4c94"]]
	},
	{	"id":"4c735530.7f4c94",
		"type":"switch",
		"name":"Check for URL",
		"property":"payload.url",
		"rules":[{"t":"null"},{"t":"else"}],
		"checkall":"false",
		"outputs":2,
		"x":268,"y":95,"z":"246e966b.09b7c2",
		"wires":[["95046dac.8fd5b"],["5e148979.fc9ae8"]]
	},
	{	"id":"95046dac.8fd5b",
		"type":"template",
		"name":"HTML Input Form",
		"field":"payload",
		"format":"html",
		"template":"<h1>Speech to Text Demo on Node-RED</h1>\n<h2>Enter a URL for the audio file</h2>\n<form  action=\"{{req._parsedUrl.pathname}}\">\n    Url: <input type=\"text\" name=\"url\"/><br/>\n    <input type=\"submit\" value=\"recognize\"/>\n</form>\n",
		"x":505,"y":97,"z":"246e966b.09b7c2",
		"wires":[["83811f42.6e72d"]]
	},
	{	"id":"12d958ff.5dae67",
		"type":"debug","name":"Debug - Pre STT",
		"active":true,
		"console":"false",
		"complete":"payload",
		"x":161,"y":404,"z":"246e966b.09b7c2",
		"wires":[]
	},
	{	"id":"83811f42.6e72d",
		"type":"http response",
		"name":"HTTP Response",
		"x":800,"y":95,"z":"246e966b.09b7c2",
		"wires":[]
	},
	{	"id":"216c79f.ae9be06",
		"type":"http request",
		"name":"STT Service",
		"method":"POST",
		"ret":"obj",
		"url":"",
		"x":429,"y":311,"z":"246e966b.09b7c2",
		"wires":[["2e4807d2.3a69b8","976fc6c4.baa9c8"]]
	},
	{	"id":"2e4807d2.3a69b8",
		"type":"debug",
		"name":"Output from STT",
		"active":true,
		"console":"false",
		"complete":"payload.results",
		"x":726,"y":393,"z":"246e966b.09b7c2",
		"wires":[]
	},
	{	"id":"46ed84c1.d4b97c",
		"type":"template",
		"name":"Output Template",
		"field":"payload",
		"format":"html",
		"template":"<h1>Speech to Text Results</h1>\n<div>{{transcript}}</div>\n<ul>\n    {{#sttout}} \n        <li>\n            <table>\n                <thead>\n                    <tr><th>Word</th><th>Start</th><th>End</th></tr>\n                </thead>\n                <tbody>\n                    {{#timestamps}}\n                        <tr>\n                            {{#.}}\n                                <td>{{.}}</td>\n                            {{/.}}    \n                        </tr>\n                    {{/timestamps}}\n                </tbody>                    \n            </table>\n        </li>\n    {{/sttout}}    \n</ul>\n\n\n",
		"x":740,"y":166,"z":"246e966b.09b7c2",
		"wires":[["83811f42.6e72d"]]
	},
	{	"id":"976fc6c4.baa9c8",
		"type":"function",
		"name":"Set Header for HTML",
		"func":"msg.sttout = msg.payload.results[0].alternatives[0];\nmsg.transcript = msg.payload.results[0].alternatives[0].transcript;\nmsg.headers = {'Content-Type' : 'text/html'};\nreturn msg;",
		"outputs":1,
		"noerr":0,"x":714,"y":240,"z":"246e966b.09b7c2",
		"wires":[["46ed84c1.d4b97c","b6c03ed8.b92b28"]]
	},
	{	"id":"45779539.ad3b24",
		"type":"http request",
		"name":"Fetch the Audio",
		"method":"GET",
		"ret":"bin",
		"url":"",
		"x":147,"y":286,"z":"246e966b.09b7c2",
		"wires":[["12d958ff.5dae67","152f038e.c210fc"]]
	},
	{	"id":"152f038e.c210fc",
		"type":"function",
		"name":"Prepare For STT Service",
		"func":"msg.headers = {'Content-Type' : 'audio/wav'};\nmsg.url=\"https://stream.watsonplatform.net/speech-to-text/api/v1/recognize?timestamps=true&continuous=true\";\nreturn msg;",
		"outputs":1,
		"noerr":0,
		"x":381,"y":244,"z":"246e966b.09b7c2",
		"wires":[["216c79f.ae9be06"]]
	},
	{	"id":"5e148979.fc9ae8",
		"type":"function",
		"name":"Prepare to Fetch Audio",
		"func":"audiourl = encodeURI(msg.payload.url)\nmsg.url=audiourl;\nreturn msg;",
		"outputs":1,
		"noerr":0,
		"x":166,"y":199,"z":"246e966b.09b7c2",
		"wires":[["45779539.ad3b24"]]
	},
	{	"id":"b6c03ed8.b92b28",
		"type":"debug",
		"name":"",
		"active":true,
		"console":"false",
		"complete":"transcript",
		"x":764,"y":317,"z":"246e966b.09b7c2",
		"wires":[]
	},
	{	"id":"52c0efc2.371ed",
		"type":"comment",
		"name":"!!Remember to add Speech to Text service credentials!!",
		"info":"Specify basic credentials for the http response node that interacts with the speech to\ntext service. Get these credentials from IBM Cloud.\n",
		"x":400,"y":352,"z":"246e966b.09b7c2",
		"wires":[]
	}
]
